{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["colors","App","props","fetchQuote","fetch","then","response","json","data","setState","quote","content","author","color1","Math","floor","random","generateQuote","tweetQuote","sendQuote","state","document","querySelector","setAttribute","this","className","style","display","height","justifyContent","alignItems","background","transition","id","width","padding","paddingTop","boxShadow","borderRadius","color","textAlign","onClick","bind","textDecoration","href","target","icon","faTwitterSquare","size","backgroundColor","border","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qPAIMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA4FaC,E,kDAxFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAQVC,WAAa,WACTC,MAAM,kCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACL,EAAKC,SAAS,CACXC,MAAOF,EAAKG,QACZC,OAAQ,KAAOJ,EAAKI,OACpBC,OAAQb,EAAOc,KAAKC,MAAsB,GAAhBD,KAAKE,iBAhBrB,EAwBlBC,cAAgB,WACd,EAAKd,cAzBW,EA2BlBe,WAAa,WACX,IAAMC,EAAY,yCAA2C,EAAKC,MAAMV,MACxEW,SAASC,cAAc,gBAAgBC,aAAa,OAAQJ,IA3B5D,EAAKC,MAAQ,CACXV,MAAO,GACPE,OAAQ,GACRC,OAAQ,QALM,E,qDAoBlB,WACEW,KAAKrB,e,oBAUP,WACA,OACE,qBAAKsB,UAAU,MAAMC,MAAO,CAC1BC,QAAS,OACTC,OAAQ,QACRC,eAAgB,SAChBC,WAAY,SACZC,WAAYP,KAAKJ,MAAMP,OACvBmB,WAAY,iBANd,SAQE,sBAAKP,UAAU,YAAYQ,GAAG,YAAYP,MAAO,CAC/CQ,MAAO,MACPC,QAAS,GACTC,WAAY,GACZC,UAAW,0CACXC,aAAc,EACdP,WAAY,SANd,UAQE,oBAAIE,GAAG,OAAOP,MAAO,CACnBa,MAAOf,KAAKJ,MAAMP,OAClBmB,WAAY,WACZQ,UAAW,UAHb,SAIIhB,KAAKJ,MAAMV,QACf,qBAAKgB,MAAO,CACVC,QAAS,OACTE,eAAgB,WAChBU,MAAOf,KAAKJ,MAAMP,OAClBmB,WAAY,YAJd,SAKG,mBAAGC,GAAG,SAAN,SAAgBT,KAAKJ,MAAMR,WAC9B,sBAAKc,MAAO,CACVC,QAAS,OACTE,eAAgB,iBAFlB,UAIE,mBAAGY,QAASjB,KAAKN,WAAWwB,KAAKlB,MAAOE,MAAO,CAC7CiB,eAAgB,OAChBJ,MAAOf,KAAKJ,MAAMP,OAClBmB,WAAY,YAEdY,KAAK,2BAA2BC,OAAO,SAASZ,GAAG,cALnD,SAKiE,cAAC,IAAD,CAAiBa,KAAMC,IAAiBC,KAAK,SAC9G,wBAAQf,GAAG,YAAYP,MAAO,CAC5BuB,gBAAiBzB,KAAKJ,MAAMP,OAC5B0B,MAAO,QACPW,OAAQ,OACRZ,aAAc,EACdN,WAAY,iBAEdS,QAASjB,KAAKP,cAAcyB,KAAKlB,MAPjC,mC,GAvEQ2B,IAAMC,WCPTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAAS2C,eAAe,SAM1BX,M","file":"static/js/main.214bbd12.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitterSquare } from '@fortawesome/free-brands-svg-icons';\n\nconst colors = [\n  \"#116edf\",\n  \"#1cc261\",\n  \"#352b44\",\n  \"#b5924e\",\n  \"#9b8ae6\",\n  \"#9a0d08\",\n  \"#f36268\",\n  \"#b341fc\",\n  \"#c0e7dc\",\n  \"#f8387f\",\n  \"#1c0a5c\",\n  \"#536113\"\n]\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quote: \"\",\n      author: \"\",\n      color1: \"grey\"\n    }\n  }\n\nfetchQuote = () => {\n    fetch(\"https://api.quotable.io/random\")\n      .then(response => response.json())\n      .then(data => {\n       this.setState({\n          quote: data.content,\n          author: \"- \" + data.author,\n          color1: colors[Math.floor(Math.random() * 11)]\n        })\n      })\n  }\n  componentDidMount(){\n    this.fetchQuote()\n  }\n  \n  generateQuote = () => {\n    this.fetchQuote()\n  }\n  tweetQuote = () => {\n    const sendQuote = \"https://twitter.com/intent/tweet?text=\" + this.state.quote\n    document.querySelector(\"#tweet-quote\").setAttribute(\"href\", sendQuote);\n  }\n  render(){\n  return (\n    <div className=\"App\" style={{\n      display: \"flex\",\n      height: \"100vh\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      background: this.state.color1,\n      transition: \"background 2s\"\n    }}>\n      <div className=\"Container\" id=\"quote-box\" style={{\n        width: \"30%\",\n        padding: 40,\n        paddingTop: 20,\n        boxShadow: \"0px 3px 10px 0px rgba(53, 50, 50, 0.78)\",\n        borderRadius: 8,\n        background: \"white\"\n      }}>\n        <h2 id=\"text\" style={{\n          color: this.state.color1,\n          transition: \"color 2s\",\n          textAlign: \"center\"\n        }}>{this.state.quote}</h2>\n        <div style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          color: this.state.color1,\n          transition: \"color 2s\"\n        }}><p id=\"author\">{this.state.author}</p></div>\n        <div style={{\n          display: \"flex\",\n          justifyContent: \"space-between\"\n        }}>\n          <a onClick={this.tweetQuote.bind(this)} style={{\n            textDecoration: \"none\",\n            color: this.state.color1,\n            transition: \"color 2s\"\n          }} \n          href=\"twitter.com/intent/tweet\" target=\"_blank\" id=\"tweet-quote\"><FontAwesomeIcon icon={faTwitterSquare} size=\"3x\"/></a>\n          <button id=\"new-quote\" style={{\n            backgroundColor: this.state.color1,\n            color: \"white\",\n            border: \"none\",\n            borderRadius: 6,\n            transition: \"background 2s\"\n          }}\n          onClick={this.generateQuote.bind(this)}>New quote</button>\n          </div>\n        </div>\n    </div>\n  );\n  }\n}\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}